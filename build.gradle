buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'central'
            url 'https://maven.thorfusion.com/artifactory/central/'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: "forge"
version = "2.0.2-Lost-Era"
group = "nc"

archivesBaseName = "NuclearCraft"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

configurations {
    shade
    compile.extendsFrom shade
    compile.extendsFrom exportedCompile
}

repositories {
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name 'Chisel Repo'
        url "http://maven.tterrag.com/"
    }
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

}


dependencies {
    compile(group: 'mekanism', name: 'Mekanism-Community-Edition', version: '1.7.10-9.10.25', classifier: 'API')
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "net.industrial-craft:industrialcraft-2:2.2.811-experimental:api"
    shade ("team.chisel.ctmlib:CTMLib:MC1.7.10-1.4.1.5") {
        transitive = false
    }
}



//sourceSets
//        {
//            main
//                    {
//                        java { srcDirs = ["$projectDir/java"] }
//                        resources { srcDirs = ["$projectDir/resources"] }
//                    }
//        }

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**', '*.info'
        }
    }
}

